services:

#TODO remove root container access
#TODO Fix p2p onion address not accessible from outside

  tor-client:
    build:
      context: ./services/tor-client
      dockerfile: Dockerfile
      # args:
    container_name: tor-client
    # environment:
    volumes:
      - tor-data:/var/lib/tor:rw
    # secrets:
    networks:
      nodenet:
        ipv4_address: 172.28.0.2
    # ports:
    # depends_on:
    restart: always
    init: true
    user: root
    command: --HashedControlPassword ${TOR_CONTROL_HASHED_PASSWORD}

  tor-relay:
    build:
      context: ./services/tor-relay
      dockerfile: Dockerfile
      # args:
    container_name: tor-relay
    # environment:
    volumes:
      - tor-data:/var/lib/tor:rw
    # secrets:
    networks:
      nodenet:
        ipv4_address: 172.28.0.3
    ports:
      - "9001:9001"
      - "9030:9030"
    # depends_on:
    restart: always
    init: true
    user: root
    command: --Address ${HOST_PUBLIC_IP}

  knots:
    build:
      context: ./services/knots
      dockerfile: Dockerfile
      # args:
    container_name: knots
    # environment:
    volumes:
      - knots-data:/var/lib/knots:rw
    # secrets:
    networks:
      nodenet:
        ipv4_address: 172.28.0.4
    ports:
      - "8332:8332"
    depends_on:
      - tor-client
    restart: always
    init: true
    user: root
    command: -rpcuser=${RPC_USER} -rpcpassword=${RPC_PASSWORD} -torpassword=${TOR_CONTROL_PASSWORD}

  # mempool-frontend:
  #   image: mempool/frontend:latest
  #   container_name: mempool-frontend
  #   environment:
  #     FRONTEND_HTTP_PORT: 8080
  #     BACKEND_MAINNET_HTTP_HOST: mempool-backend
  #   # volumes:
  #   # secrets:
  #   # networks:
  #   ports:
  #     - 80:8080
  #   depends_on:
  #     - mempool-backend
  #   restart: always
  #   init: true

  # mempool-backend:
  #   image: mempool/backend:latest
  #   # container_name:
  #   env_file: api.env
  #   volumes:
  #     - mempool-data:/backend/cache:rw
  #   # secrets:
  #   # networks:
  #   # ports:
  #   depends_on:
  #     knots:
  #       condition: service_healthy
  #     mariadb:
  #       condition: service_healthy
  #   restart: always
  #   init: true

  # mariadb:
    

networks:
  nodenet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/28

volumes:
  tor-data:
  # mempool-data:
  # mariadb-data:
  knots-data:
    driver: local
    driver_opts:
      type: none
      device: ${KNOTS_DIR}
      o: bind